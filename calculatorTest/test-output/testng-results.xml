<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="35" ignored="0" total="71" passed="36">
  <reporter-output>
  </reporter-output>
  <suite name="Test-method Suite" duration-ms="132" started-at="2019-10-30T17:42:37 IST" finished-at="2019-10-30T17:42:38 IST">
    <groups>
      <group name="Doubletg">
        <method signature="TestCalculator.tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" class="calculatorTest.TestCalculator"/>
      </group> <!-- Doubletg -->
      <group name="Doublesum">
        <method signature="TestCalculator.sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" class="calculatorTest.TestCalculator"/>
      </group> <!-- Doublesum -->
      <group name="Arithmetic">
        <method signature="TestCalculator.DivideByZero()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="DivideByZero" class="calculatorTest.TestCalculator"/>
        <method signature="TestCalculator.div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" class="calculatorTest.TestCalculator"/>
        <method signature="TestCalculator.mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" class="calculatorTest.TestCalculator"/>
        <method signature="TestCalculator.pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" class="calculatorTest.TestCalculator"/>
        <method signature="TestCalculator.sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" class="calculatorTest.TestCalculator"/>
        <method signature="TestCalculator.sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" class="calculatorTest.TestCalculator"/>
      </group> <!-- Arithmetic -->
    </groups>
    <test name="Test" duration-ms="132" started-at="2019-10-30T17:42:37 IST" finished-at="2019-10-30T17:42:38 IST">
      <class name="calculatorTest.TestCalculator">
        <test-method status="PASS" signature="DivideByZero()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="DivideByZero" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at calculatorTest.TestCalculator.DivideByZero(TestCalculator.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivideByZero -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[23.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24.8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[575.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="7" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[194481.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="7" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[80.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2146.6890000000003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="FAIL" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [391.3539299999999]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [391.3539299999999]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.pow(TestCalculator.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [4.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [4.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.mult(TestCalculator.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [13.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [13.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.mult(TestCalculator.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.mult(TestCalculator.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[22.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="FAIL" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [11.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [11.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.mult(TestCalculator.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="FAIL" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [2.8561000000000005]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [2.8561000000000005]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.pow(TestCalculator.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[64.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="FAIL" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [571.7870000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [571.7870000000001]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.pow(TestCalculator.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [646990.1834490004]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [646990.1834490004]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.pow(TestCalculator.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="FAIL" signature="mult(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="mult" duration-ms="15" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleMul" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [-16.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [-16.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.mult(TestCalculator.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="pow(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="pow" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoublePow" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [127.69000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [127.69000000000001]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.pow(TestCalculator.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pow -->
        <test-method status="PASS" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.8284271247461903]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [-0.09999999999999987]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [-0.09999999999999987]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sub(TestCalculator.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.591656999213594]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.58257569495584]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="FAIL" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.140175425099138]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.140175425099138]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sqrt(TestCalculator.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="FAIL" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.816590212458495]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.816590212458495]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sqrt(TestCalculator.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="16" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="FAIL" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [7.9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [7.9]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sub(TestCalculator.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [3.361547262794322]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [3.361547262794322]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sqrt(TestCalculator.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.9]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sub(TestCalculator.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="PASS" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [-12.700000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [-12.700000000000001]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sub(TestCalculator.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="FAIL" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [2.8809720581775866]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [2.8809720581775866]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sqrt(TestCalculator.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[23.2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[24.8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[48]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sub(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sub" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSub" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [6.9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [6.9]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sub(TestCalculator.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sub -->
        <test-method status="FAIL" signature="sqrt(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sqrt" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSqrt" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [3.0495901363953815]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [3.0495901363953815]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sqrt(TestCalculator.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sqrt -->
        <test-method status="PASS" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="16" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.tg(TestCalculator.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="FAIL" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [10.700000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [10.700000000000001]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sum(TestCalculator.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [-9.9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [-9.9]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sum(TestCalculator.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.tg(TestCalculator.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="FAIL" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [9.700000000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [9.700000000000001]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sum(TestCalculator.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="FAIL" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [2.7]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [2.7]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sum(TestCalculator.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [4.699999999999999]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [4.699999999999999]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.sum(TestCalculator.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[90]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="FAIL" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [4.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [4.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.tg(TestCalculator.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.tg(TestCalculator.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tg(double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="tg" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataFortg" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [1.0]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.tg(TestCalculator.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tg -->
        <test-method status="PASS" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sum(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="sum" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleSum" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4.3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sum -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="16" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.372340425531915]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="FAIL" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [2.357142857142857]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [2.357142857142857]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.div(TestCalculator.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="FAIL" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [0.9285714285714287]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [0.9285714285714287]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.div(TestCalculator.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="FAIL" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [6.642857142857144]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [6.642857142857144]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.div(TestCalculator.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="FAIL" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[-11.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [-8.071428571428573]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [-8.071428571428573]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.div(TestCalculator.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="setUp" is-config="true" duration-ms="0" started-at="2019-10-30T17:42:38 IST" finished-at="2019-10-30T17:42:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="div(double, double, double)[pri:0, instance:calculatorTest.TestCalculator@3108bc]" name="div" duration-ms="0" started-at="2019-10-30T17:42:38 IST" data-provider="dataForDoubleDiv" depends-on-methods="calculatorTest.TestCalculator.DivideByZero" finished-at="2019-10-30T17:42:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[34]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [34.0] but found [5.92857142857143]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [34.0] but found [5.92857142857143]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEquals(Assert.java:640)
at org.testng.Assert.assertEquals(Assert.java:651)
at calculatorTest.TestCalculator.div(TestCalculator.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- div -->
      </class> <!-- calculatorTest.TestCalculator -->
    </test> <!-- Test -->
  </suite> <!-- Test-method Suite -->
</testng-results>
