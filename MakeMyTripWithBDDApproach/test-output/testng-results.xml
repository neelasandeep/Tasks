<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-24T17:03:59 IST" name="Default suite" finished-at="2019-11-24T17:04:19 IST" duration-ms="19720">
    <groups>
    </groups>
    <test started-at="2019-11-24T17:03:59 IST" name="Default test" finished-at="2019-11-24T17:04:19 IST" duration-ms="19720">
      <class name="TestRunner.TestRunner">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:03:58 IST" name="setupSuite" finished-at="2019-11-24T17:03:59 IST" duration-ms="1486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:03:59 IST" name="setUpClass" finished-at="2019-11-24T17:04:00 IST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="localSetup()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:00 IST" name="localSetup" finished-at="2019-11-24T17:04:09 IST" duration-ms="9000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- localSetup -->
        <test-method is-config="true" signature="localSetup()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:00 IST" name="localSetup" finished-at="2019-11-24T17:04:09 IST" duration-ms="8811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- localSetup -->
        <test-method is-config="true" signature="localSetup()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:00 IST" name="localSetup" finished-at="2019-11-24T17:04:09 IST" duration-ms="8811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- localSetup -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:09 IST" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2019-11-24T17:04:09 IST" duration-ms="31" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[HotelBooking]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[You must supply an output argument to pretty. Like so: pretty:output]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: You must supply an output argument to pretty. Like so: pretty:output
at cucumber.runtime.formatter.PluginFactory.instantiate(PluginFactory.java:96)
at cucumber.runtime.formatter.PluginFactory.create(PluginFactory.java:78)
at cucumber.runtime.RuntimeOptions.getPlugins(RuntimeOptions.java:207)
at cucumber.runtime.RuntimeOptions$1.invoke(RuntimeOptions.java:241)
at com.sun.proxy.$Proxy21.uri(Unknown Source)
at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:158)
at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)
at TestRunner.TestRunner.feature(TestRunner.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:09 IST" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2019-11-24T17:04:15 IST" duration-ms="5804" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flights Booking]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-Q732QR57', ip: '192.168.43.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\NEELA\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 3a741812fefd67ad45b00a899414f001]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-Q732QR57', ip: '192.168.43.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\NEELA\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 3a741812fefd67ad45b00a899414f001
at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:69)
at TestRunner.TestRunner.feature(TestRunner.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-Q732QR57', ip: '192.168.43.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 78.0.3904.108, chrome: {chromedriverVersion: 78.0.3904.70 (edb9c9f3de024..., userDataDir: C:\Users\NEELA\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:64597}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 3a741812fefd67ad45b00a899414f001
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:792)
at com.epam.makeMytriptestcasesPagess.BaseClass.open(BaseClass.java:46)
at Stepdefs.FlightsSearchDef.user_in_Home_page(FlightsSearchDef.java:18)
at ✽.Given User in Home page "Home"(FlightsSearch.feature:4)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:09 IST" name="ScreenShotOnFailure" finished-at="2019-11-24T17:04:10 IST" duration-ms="1382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=FAILURE method=TestRunner.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:09 IST" name="feature" description="Runs Cucumber Feature" data-provider="features" finished-at="2019-11-24T17:04:09 IST" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[checking Homepage Funtions]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[Only one formatter can use STDOUT, now both pretty and pretty use it. If you use more than one formatter you must specify output path with PLUGIN:PATH_OR_URL]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: Only one formatter can use STDOUT, now both pretty and pretty use it. If you use more than one formatter you must specify output path with PLUGIN:PATH_OR_URL
at cucumber.runtime.formatter.PluginFactory.defaultOutOrFailIfAlreadyUsed(PluginFactory.java:176)
at cucumber.runtime.formatter.PluginFactory.convertOrNull(PluginFactory.java:135)
at cucumber.runtime.formatter.PluginFactory.instantiate(PluginFactory.java:90)
at cucumber.runtime.formatter.PluginFactory.create(PluginFactory.java:78)
at cucumber.runtime.RuntimeOptions.getPlugins(RuntimeOptions.java:207)
at cucumber.runtime.RuntimeOptions$1.invoke(RuntimeOptions.java:241)
at com.sun.proxy.$Proxy21.uri(Unknown Source)
at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:158)
at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)
at TestRunner.TestRunner.feature(TestRunner.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:09 IST" name="ScreenShotOnFailure" finished-at="2019-11-24T17:04:10 IST" duration-ms="1502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=FAILURE method=TestRunner.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:10 IST" name="tearDown" finished-at="2019-11-24T17:04:15 IST" duration-ms="4886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:10 IST" name="tearDown" finished-at="2019-11-24T17:04:15 IST" duration-ms="4608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="ScreenShotOnFailure(org.testng.ITestResult)[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:15 IST" name="ScreenShotOnFailure" finished-at="2019-11-24T17:04:19 IST" duration-ms="4150" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=feature status=FAILURE method=TestRunner.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:TestRunner.TestRunner@28f2a10f] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:30320
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-Q732QR57', ip: '192.168.43.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:30320
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-Q732QR57', ip: '192.168.43.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:295)
at com.epam.Utilities.Helper.ScreenShots(Helper.java:18)
at com.epam.makeMytriptestcasesPagess.BaseClass.ScreenShotOnFailure(BaseClass.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:658)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:642)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:30320
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
... 25 more
Caused by: java.net.ConnectException: Connection refused: connect
at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method)
at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107)
at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399)
at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242)
at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403)
at java.base/java.net.Socket.connect(Socket.java:591)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
... 45 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScreenShotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:19 IST" name="tearDownClass" finished-at="2019-11-24T17:04:19 IST" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestRunner.TestRunner@28f2a10f]" started-at="2019-11-24T17:04:19 IST" name="tearDown" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1574595259251" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestRunner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
