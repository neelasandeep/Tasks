<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="0" total="22" passed="18" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-08T21:46:27 IST" name="Suite" finished-at="2019-12-08T21:46:36 IST" duration-ms="9202">
    <groups>
    </groups>
    <test started-at="2019-12-08T21:46:27 IST" name="Test" finished-at="2019-12-08T21:46:36 IST" duration-ms="9202">
      <class name="testcases.TC003_Post_Employee_Record">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:27 IST" name="setUp" finished-at="2019-12-08T21:46:27 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:29 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:31 IST" duration-ms="2576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPNAME%EMPSAL%EMPAGE%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:31 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:32 IST" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sand9%345564.0%25.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:32 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:33 IST" duration-ms="1074" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sand789%35353.0%46.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:33 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:34 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[san789%546754.0%37.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:34 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:35 IST" duration-ms="918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAN4420%46456.0%38.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method signature="postEmployee(java.lang.String)[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:35 IST" name="postEmployee" data-provider="empdata" finished-at="2019-12-08T21:46:36 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAN329%34566.0%44.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.TC003_Post_Employee_Record@53f3bdbd]" started-at="2019-12-08T21:46:36 IST" name="tearDown" finished-at="2019-12-08T21:46:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.TC003_Post_Employee_Record -->
      <class name="testcases.TC004_PutEmployee_Record">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC004_PutEmployee_Record@6c7a164b]" started-at="2019-12-08T21:46:33 IST" name="setUp" finished-at="2019-12-08T21:46:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="UpdateRecords(java.lang.String)[pri:0, instance:testcases.TC004_PutEmployee_Record@6c7a164b]" started-at="2019-12-08T21:46:33 IST" name="UpdateRecords" data-provider="updatedata" finished-at="2019-12-08T21:46:34 IST" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPNAME%EMPSAL%EMPAGE%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRecords -->
        <test-method signature="UpdateRecords(java.lang.String)[pri:0, instance:testcases.TC004_PutEmployee_Record@6c7a164b]" started-at="2019-12-08T21:46:34 IST" name="UpdateRecords" data-provider="updatedata" finished-at="2019-12-08T21:46:35 IST" duration-ms="1193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep12341%100000.0%22.0%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateRecords -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.TC004_PutEmployee_Record@6c7a164b]" started-at="2019-12-08T21:46:35 IST" name="tearDown" finished-at="2019-12-08T21:46:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.TC004_PutEmployee_Record -->
      <class name="testcases.TC006_Delete_Emp_Record">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:31 IST" name="setUp" finished-at="2019-12-08T21:46:31 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="deleteRecord()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:31 IST" name="deleteRecord" finished-at="2019-12-08T21:46:34 IST" duration-ms="3464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRecord -->
        <test-method signature="CheckResponseBody()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:34 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:34 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method signature="CheckStatusCode()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:34 IST" name="CheckStatusCode" finished-at="2019-12-08T21:46:34 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method signature="CheckResponseTime()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:34 IST" name="CheckResponseTime" finished-at="2019-12-08T21:46:34 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.TC006_Delete_Emp_Record@7d61eb55]" started-at="2019-12-08T21:46:34 IST" name="tearDown" finished-at="2019-12-08T21:46:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.TC006_Delete_Emp_Record -->
      <class name="testcases.TC003_GET_Header">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC003_GET_Header@222a59e6]" started-at="2019-12-08T21:46:32 IST" name="setUp" finished-at="2019-12-08T21:46:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="get()[pri:0, instance:testcases.TC003_GET_Header@222a59e6]" started-at="2019-12-08T21:46:32 IST" name="get" finished-at="2019-12-08T21:46:33 IST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
      </class> <!-- testcases.TC003_GET_Header -->
      <class name="testcases.TC001_Get_All_Employees">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:30 IST" name="setUp" finished-at="2019-12-08T21:46:30 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getEmployees()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:30 IST" name="getEmployees" finished-at="2019-12-08T21:46:31 IST" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployees -->
        <test-method signature="CheckResponseBody()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:31 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:31 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method signature="CheckStatusCode()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:31 IST" name="CheckStatusCode" finished-at="2019-12-08T21:46:31 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method signature="CheckResponseTime()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:31 IST" name="CheckResponseTime" finished-at="2019-12-08T21:46:31 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.TC001_Get_All_Employees@34129c78]" started-at="2019-12-08T21:46:32 IST" name="tearDown" finished-at="2019-12-08T21:46:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.TC001_Get_All_Employees -->
      <class name="testcases.TC002_Get_Single_Employee_Data">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:27 IST" name="setUp" finished-at="2019-12-08T21:46:27 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getEmployees()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:27 IST" name="getEmployees" finished-at="2019-12-08T21:46:30 IST" duration-ms="2810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployees -->
        <test-method signature="CheckStatusCode()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:30 IST" name="CheckStatusCode" finished-at="2019-12-08T21:46:30 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method signature="CheckResponseTime()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:30 IST" name="CheckResponseTime" finished-at="2019-12-08T21:46:30 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseTime -->
        <test-method retried="true" signature="CheckResponseBody()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:30 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:30 IST" duration-ms="62" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testcases.TC002_Get_Single_Employee_Data.CheckResponseBody(TC002_Get_Single_Employee_Data.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method retried="true" signature="CheckResponseBody()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:30 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:30 IST" duration-ms="4" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testcases.TC002_Get_Single_Employee_Data.CheckResponseBody(TC002_Get_Single_Employee_Data.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:204)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method retried="true" signature="CheckResponseBody()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:31 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:31 IST" duration-ms="3" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testcases.TC002_Get_Single_Employee_Data.CheckResponseBody(TC002_Get_Single_Employee_Data.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:204)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method signature="CheckResponseBody()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:31 IST" name="CheckResponseBody" finished-at="2019-12-08T21:46:31 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at testcases.TC002_Get_Single_Employee_Data.CheckResponseBody(TC002_Get_Single_Employee_Data.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:204)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckResponseBody -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.TC002_Get_Single_Employee_Data@17d919b6]" started-at="2019-12-08T21:46:31 IST" name="tearDown" finished-at="2019-12-08T21:46:31 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testcases.TC002_Get_Single_Employee_Data -->
      <class name="testcases.TC005_Auth">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testcases.TC005_Auth@62656be4]" started-at="2019-12-08T21:46:27 IST" name="setUp" finished-at="2019-12-08T21:46:27 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="get()[pri:0, instance:testcases.TC005_Auth@62656be4]" started-at="2019-12-08T21:46:28 IST" name="get" finished-at="2019-12-08T21:46:30 IST" duration-ms="2820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
      </class> <!-- testcases.TC005_Auth -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
